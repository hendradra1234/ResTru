// Mocks generated by Mockito 5.3.2 from annotations
// in restaurant_app/test/restaurant_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_app/data/api/api_service.dart' as _i2;
import 'package:restaurant_app/data/db/db_service.dart' as _i3;
import 'package:restaurant_app/data/model/model.dart' as _i4;
import 'package:restaurant_app/provider/provider.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiService_0 extends _i1.SmartFake implements _i2.ApiService {
  _FakeApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDbService_1 extends _i1.SmartFake implements _i3.DbService {
  _FakeDbService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseRestaurant_2 extends _i1.SmartFake
    implements _i4.ResponseRestaurant {
  _FakeResponseRestaurant_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseRestaurantDetail_3 extends _i1.SmartFake
    implements _i4.ResponseRestaurantDetail {
  _FakeResponseRestaurantDetail_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAppProvider_4 extends _i1.SmartFake implements _i5.AppProvider {
  _FakeAppProvider_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponseReview_5 extends _i1.SmartFake
    implements _i4.ResponseReview {
  _FakeResponseReview_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppProvider extends _i1.Mock implements _i5.AppProvider {
  MockAppProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeApiService_0(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i2.ApiService);
  @override
  _i3.DbService get dbService => (super.noSuchMethod(
        Invocation.getter(#dbService),
        returnValue: _FakeDbService_1(
          this,
          Invocation.getter(#dbService),
        ),
      ) as _i3.DbService);
  @override
  _i4.ResponseRestaurant get result => (super.noSuchMethod(
        Invocation.getter(#result),
        returnValue: _FakeResponseRestaurant_2(
          this,
          Invocation.getter(#result),
        ),
      ) as _i4.ResponseRestaurant);
  @override
  _i4.ResponseRestaurantDetail get restaurant => (super.noSuchMethod(
        Invocation.getter(#restaurant),
        returnValue: _FakeResponseRestaurantDetail_3(
          this,
          Invocation.getter(#restaurant),
        ),
      ) as _i4.ResponseRestaurantDetail);
  @override
  List<_i4.Restaurant> get favoriteRestaurants => (super.noSuchMethod(
        Invocation.getter(#favoriteRestaurants),
        returnValue: <_i4.Restaurant>[],
      ) as List<_i4.Restaurant>);
  @override
  _i5.ResultState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i5.ResultState.loading,
      ) as _i5.ResultState);
  @override
  String get message => (super.noSuchMethod(
        Invocation.getter(#message),
        returnValue: '',
      ) as String);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i5.AppProvider getRestaurants() => (super.noSuchMethod(
        Invocation.method(
          #getRestaurants,
          [],
        ),
        returnValue: _FakeAppProvider_4(
          this,
          Invocation.method(
            #getRestaurants,
            [],
          ),
        ),
      ) as _i5.AppProvider);
  @override
  _i5.AppProvider getRestaurant(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getRestaurant,
          [id],
        ),
        returnValue: _FakeAppProvider_4(
          this,
          Invocation.method(
            #getRestaurant,
            [id],
          ),
        ),
      ) as _i5.AppProvider);
  @override
  void onSearch(String? query) => super.noSuchMethod(
        Invocation.method(
          #onSearch,
          [query],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<dynamic> postReview(_i4.Review? review) => (super.noSuchMethod(
        Invocation.method(
          #postReview,
          [review],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i5.AppProvider getFavoriteRestaurants() => (super.noSuchMethod(
        Invocation.method(
          #getFavoriteRestaurants,
          [],
        ),
        returnValue: _FakeAppProvider_4(
          this,
          Invocation.method(
            #getFavoriteRestaurants,
            [],
          ),
        ),
      ) as _i5.AppProvider);
  @override
  _i6.Future<dynamic> toggleFavorite(_i4.Restaurant? restaurant) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleFavorite,
          [restaurant],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i2.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.ResponseRestaurant> getList() => (super.noSuchMethod(
        Invocation.method(
          #getList,
          [],
        ),
        returnValue:
            _i6.Future<_i4.ResponseRestaurant>.value(_FakeResponseRestaurant_2(
          this,
          Invocation.method(
            #getList,
            [],
          ),
        )),
      ) as _i6.Future<_i4.ResponseRestaurant>);
  @override
  _i6.Future<_i4.ResponseRestaurant> search({String? query = r''}) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [],
          {#query: query},
        ),
        returnValue:
            _i6.Future<_i4.ResponseRestaurant>.value(_FakeResponseRestaurant_2(
          this,
          Invocation.method(
            #search,
            [],
            {#query: query},
          ),
        )),
      ) as _i6.Future<_i4.ResponseRestaurant>);
  @override
  _i6.Future<_i4.ResponseRestaurantDetail> getDetail(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetail,
          [id],
        ),
        returnValue: _i6.Future<_i4.ResponseRestaurantDetail>.value(
            _FakeResponseRestaurantDetail_3(
          this,
          Invocation.method(
            #getDetail,
            [id],
          ),
        )),
      ) as _i6.Future<_i4.ResponseRestaurantDetail>);
  @override
  _i6.Future<_i4.ResponseReview> postReview(_i4.Review? review) =>
      (super.noSuchMethod(
        Invocation.method(
          #postReview,
          [review],
        ),
        returnValue: _i6.Future<_i4.ResponseReview>.value(_FakeResponseReview_5(
          this,
          Invocation.method(
            #postReview,
            [review],
          ),
        )),
      ) as _i6.Future<_i4.ResponseReview>);
}
